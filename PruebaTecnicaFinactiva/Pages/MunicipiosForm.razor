@page "/MunicipioForm"
@page "/MunicipioForm/{Id:int}"

@using System.Net.Http
@using System.Net.Http.Json
@using Data

@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Municipios</h3>




<EditForm Model="@_municipio">
    <div class="container-fluid">
        <div class="form-group" row mb-1>
            <label>Nombre</label>
            <div class="col-sm-9">
                <div class="col-sm-9">
                    <InputText class="form-control" @bind-Value="_municipio.NombreMunicipio"></InputText>
                </div>

            </div>


        </div>

        <div class="form-group" row mb-1>
            <label>Esta Activo?</label>
            <div class="col-sm-4">
                <div class="col-sm-4">
                    <InputCheckbox class="form-control" @bind-Value="_municipio.Estado"></InputCheckbox>

                   
                </div>
            </div>

            <br />
            <br />
            <div class="form-group" row mb-1>
                <div class="col-sm-12">
                    <button class="btn btn-primary" @onclick="Save">Guardar</button>
                </div>

            </div>

        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
   
    public string idEstad = "0";
    public string url = "api/Municipio/";
    Municipio _municipio = new Municipio();
    ResponseService _respuesta = new ResponseService();
    Municipio municipio = new Municipio();
    public List<Estados> ListaEstados = new List<Estados>();
    
    private async Task Save()
    {
        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync<Municipio>(url + "Update", _municipio);
            municipio = response.Content.ReadFromJsonAsync<Municipio>().Result;
            NavigationManager.NavigateTo("/Municipios");
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Municipio>(url + "NewMunicipio", _municipio);
            _respuesta = response.Content.ReadFromJsonAsync<ResponseService>().Result;
            NavigationManager.NavigateTo("/Municipios");
        }

    }

    protected override async Task OnInitializedAsync()
    {

        Estados estados = new Estados();
        estados.Estado = true;
        estados.Id = 1;
        ListaEstados.Add(estados);
        estados = new Estados();
        estados.Id = 0;
        estados.Estado = false;
        ListaEstados.Add(estados);
        if (Id != 0)
        {
            MunicipioDetails Municipiodett = await Http.GetFromJsonAsync<MunicipioDetails>(url + "Get?id=" + Id);
            _municipio.IdMunicipio = Municipiodett.IdMunicipio;
            _municipio.NombreMunicipio = Municipiodett.NombreMunicipio;
            _municipio.Estado = Municipiodett.Estado;
        }

    }

}
