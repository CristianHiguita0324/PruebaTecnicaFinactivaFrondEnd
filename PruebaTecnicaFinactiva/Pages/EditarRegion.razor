@page "/EditarRegion/{Id:int}"

@using System.Net.Http
@using System.Net.Http.Json
@using Data

@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Detalles Region</h3>


<EditForm Model="@detalles">
    <div class="container-fluid">
        <div class="form-group" row mb-1>
            <label>Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@detalles.NombreRegion"></InputText>
            </div>

        </div>
        <br />
        <br />

        <h3>Municipios asociados a la Region</h3>
        <table class="table">
            <tr>
                <th>Nombre</th>
                <th>Elimina 0  -- Agrega 1</th>
            </tr>

            @if (detalles.Municipios != null && detalles.Municipios.Count >= 0)
            {
                @foreach (var item in detalles.Municipios)
                {
        <tr>
            <td>@item.Nombre</td>
            <td><InputText class="form-control"  @bind-Value="item.EliminaAgrega"></InputText></td>
        </tr>
                }
            }

        </table>


        <br />

        <div class="form-group" row mb-1>
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Update">Actualizar</button>
            </div>

        </div>

    </div>
</EditForm>
    @code {
        [Parameter]
        public int Id { get; set; }


        public string url = "api/Region/";
        RegionDetailsMunicipio _region = new RegionDetailsMunicipio();
        RegionDetails detalles = new RegionDetails();

        ResponseService _respuesta = new ResponseService();
        private async Task Update()
        {
            var response = await Http.PutAsJsonAsync<RegionDetails>(url + "Update", detalles);
            _respuesta = response.Content.ReadFromJsonAsync<ResponseService>().Result;
            NavigationManager.NavigateTo("/Regiones");


        }
        protected override async Task OnInitializedAsync()
        {
            if (Id != 0)
            {
                _region = await Http.GetFromJsonAsync<RegionDetailsMunicipio>(url + "Get?id=" + Id);
            }

            detalles.IdRegion = _region.IdRegion;
            detalles.NombreRegion = _region.NombreRegion;
            List<MunicipioRegion> listaMunicipios = new List<MunicipioRegion>();
            if(_region.municipios != null)
            {
                foreach (var item in _region.municipios)
                {
                    MunicipioRegion municipio = new MunicipioRegion();
                    municipio.IdMunicipio = item.IdMunicipio;
                    municipio.Nombre = item.NombreMunicipio;
                    municipio.EliminaAgrega = "1";
                    listaMunicipios.Add(municipio);
                }
            }

            detalles.Municipios = listaMunicipios;

        }
    }
